//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Inputs/DefaultControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DefaultControls"",
    ""maps"": [
        {
            ""name"": ""gameplay"",
            ""id"": ""d9c83c41-481a-48ae-b03d-1276e9604262"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""9238fd97-479a-4f82-8e1a-98d033d35123"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""85ef1237-c418-4cc7-93a6-5cf1a55c17d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cast0"",
                    ""type"": ""Button"",
                    ""id"": ""2495002c-75a0-4232-a5d4-316f4d62846a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cast1"",
                    ""type"": ""Button"",
                    ""id"": ""fd5a43e4-41c8-4a61-848d-893759288b08"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cast2"",
                    ""type"": ""Button"",
                    ""id"": ""e9cc01cb-78ee-4968-8824-5f6663b6530b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""1b58622c-5d7c-4cf7-bd97-ff8638ba4bff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestartLevel"",
                    ""type"": ""Button"",
                    ""id"": ""825d90b3-54c3-46b0-943f-79661f444cf6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestoreMana"",
                    ""type"": ""Button"",
                    ""id"": ""bff96c42-8069-43a6-b65a-3e7600a25de9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""93f7700e-f5f0-4428-aae2-e8f330934df9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""fd5e3f47-599b-49e5-85ab-7f16c1be5b7a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""42f9f878-23d8-48b0-a063-50f0ad7e55b5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""fdd89c64-728b-4c6a-910c-fee999810874"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""bb02528d-d8fd-4ea2-9bc8-d817c7f47b9c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7fdf03e5-5397-4197-a6e4-c8d7a378672f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eccc41e0-ac32-44d3-b079-40f2c770516e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69833ef8-c560-4680-a07d-b3317bf522f1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7643ff1c-0226-492b-846a-869adbdefac2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51e07478-2e2f-4b44-afaf-f28fbda64a95"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RestartLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08bbdcf7-9d03-4ef7-bdd7-cf86530480f4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cast2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa35c50d-a0af-4510-bf1b-c2e968330f9a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RestoreMana"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""menu"",
            ""id"": ""1788a6b2-7548-494b-9ff4-6e3c780219ae"",
            ""actions"": [
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""592a1d29-18e4-4558-bf4f-e2315620465d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""4f3dc4e6-d4f1-4d3c-8e1f-14109249590a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ba0aca0a-c14b-46cd-ba7e-057cafb168f0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10d75631-f95f-4a91-97a0-d5727c82f101"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // gameplay
        m_gameplay = asset.FindActionMap("gameplay", throwIfNotFound: true);
        m_gameplay_Movement = m_gameplay.FindAction("Movement", throwIfNotFound: true);
        m_gameplay_Dash = m_gameplay.FindAction("Dash", throwIfNotFound: true);
        m_gameplay_Cast0 = m_gameplay.FindAction("Cast0", throwIfNotFound: true);
        m_gameplay_Cast1 = m_gameplay.FindAction("Cast1", throwIfNotFound: true);
        m_gameplay_Cast2 = m_gameplay.FindAction("Cast2", throwIfNotFound: true);
        m_gameplay_Interact = m_gameplay.FindAction("Interact", throwIfNotFound: true);
        m_gameplay_RestartLevel = m_gameplay.FindAction("RestartLevel", throwIfNotFound: true);
        m_gameplay_RestoreMana = m_gameplay.FindAction("RestoreMana", throwIfNotFound: true);
        // menu
        m_menu = asset.FindActionMap("menu", throwIfNotFound: true);
        m_menu_Esc = m_menu.FindAction("Esc", throwIfNotFound: true);
        m_menu_Respawn = m_menu.FindAction("Respawn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // gameplay
    private readonly InputActionMap m_gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_gameplay_Movement;
    private readonly InputAction m_gameplay_Dash;
    private readonly InputAction m_gameplay_Cast0;
    private readonly InputAction m_gameplay_Cast1;
    private readonly InputAction m_gameplay_Cast2;
    private readonly InputAction m_gameplay_Interact;
    private readonly InputAction m_gameplay_RestartLevel;
    private readonly InputAction m_gameplay_RestoreMana;
    public struct GameplayActions
    {
        private @DefaultControls m_Wrapper;
        public GameplayActions(@DefaultControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_gameplay_Movement;
        public InputAction @Dash => m_Wrapper.m_gameplay_Dash;
        public InputAction @Cast0 => m_Wrapper.m_gameplay_Cast0;
        public InputAction @Cast1 => m_Wrapper.m_gameplay_Cast1;
        public InputAction @Cast2 => m_Wrapper.m_gameplay_Cast2;
        public InputAction @Interact => m_Wrapper.m_gameplay_Interact;
        public InputAction @RestartLevel => m_Wrapper.m_gameplay_RestartLevel;
        public InputAction @RestoreMana => m_Wrapper.m_gameplay_RestoreMana;
        public InputActionMap Get() { return m_Wrapper.m_gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Cast0.started += instance.OnCast0;
            @Cast0.performed += instance.OnCast0;
            @Cast0.canceled += instance.OnCast0;
            @Cast1.started += instance.OnCast1;
            @Cast1.performed += instance.OnCast1;
            @Cast1.canceled += instance.OnCast1;
            @Cast2.started += instance.OnCast2;
            @Cast2.performed += instance.OnCast2;
            @Cast2.canceled += instance.OnCast2;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @RestartLevel.started += instance.OnRestartLevel;
            @RestartLevel.performed += instance.OnRestartLevel;
            @RestartLevel.canceled += instance.OnRestartLevel;
            @RestoreMana.started += instance.OnRestoreMana;
            @RestoreMana.performed += instance.OnRestoreMana;
            @RestoreMana.canceled += instance.OnRestoreMana;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Cast0.started -= instance.OnCast0;
            @Cast0.performed -= instance.OnCast0;
            @Cast0.canceled -= instance.OnCast0;
            @Cast1.started -= instance.OnCast1;
            @Cast1.performed -= instance.OnCast1;
            @Cast1.canceled -= instance.OnCast1;
            @Cast2.started -= instance.OnCast2;
            @Cast2.performed -= instance.OnCast2;
            @Cast2.canceled -= instance.OnCast2;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @RestartLevel.started -= instance.OnRestartLevel;
            @RestartLevel.performed -= instance.OnRestartLevel;
            @RestartLevel.canceled -= instance.OnRestartLevel;
            @RestoreMana.started -= instance.OnRestoreMana;
            @RestoreMana.performed -= instance.OnRestoreMana;
            @RestoreMana.canceled -= instance.OnRestoreMana;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @gameplay => new GameplayActions(this);

    // menu
    private readonly InputActionMap m_menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_menu_Esc;
    private readonly InputAction m_menu_Respawn;
    public struct MenuActions
    {
        private @DefaultControls m_Wrapper;
        public MenuActions(@DefaultControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Esc => m_Wrapper.m_menu_Esc;
        public InputAction @Respawn => m_Wrapper.m_menu_Respawn;
        public InputActionMap Get() { return m_Wrapper.m_menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @Esc.started += instance.OnEsc;
            @Esc.performed += instance.OnEsc;
            @Esc.canceled += instance.OnEsc;
            @Respawn.started += instance.OnRespawn;
            @Respawn.performed += instance.OnRespawn;
            @Respawn.canceled += instance.OnRespawn;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @Esc.started -= instance.OnEsc;
            @Esc.performed -= instance.OnEsc;
            @Esc.canceled -= instance.OnEsc;
            @Respawn.started -= instance.OnRespawn;
            @Respawn.performed -= instance.OnRespawn;
            @Respawn.canceled -= instance.OnRespawn;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @menu => new MenuActions(this);
    public interface IGameplayActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnCast0(InputAction.CallbackContext context);
        void OnCast1(InputAction.CallbackContext context);
        void OnCast2(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnRestartLevel(InputAction.CallbackContext context);
        void OnRestoreMana(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnEsc(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
    }
}
